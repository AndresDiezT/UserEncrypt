@model UserEncrypt.Models.ChangePasswordModel

@{
    ViewBag.Title = "Cambiar Contraseña";
}

<h2>Cambiar Contraseña</h2>

<!-- Mostrar mensajes de éxito o error -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</div>

@using (Html.BeginForm("ChangePassword", "Auth", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="CurrentPassword">@Html.DisplayNameFor(model => model.CurrentPassword)</label>
        @Html.PasswordFor(model => model.CurrentPassword, new { @class = "form-control", placeholder = "Introduce tu contraseña actual" })
        @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="NewPassword">@Html.DisplayNameFor(model => model.NewPassword)</label>
        @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", placeholder = "Introduce tu nueva contraseña" })
        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="ConfirmPassword">@Html.DisplayNameFor(model => model.ConfirmPassword)</label>
        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirma tu nueva contraseña" })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Cambiar Contraseña</button>
}
